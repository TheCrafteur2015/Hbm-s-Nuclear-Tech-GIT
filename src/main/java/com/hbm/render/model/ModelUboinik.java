// Date: 03.12.2016 21:30:48
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package com.hbm.render.model;

import org.lwjgl.opengl.GL11;

import com.hbm.items.weapon.ItemGunBase;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;
import net.minecraft.item.ItemStack;

public class ModelUboinik extends ModelBase {
	// fields
	ModelRenderer Barrel;
	ModelRenderer ConnectorFront;
	ModelRenderer ConnectorBack;
	ModelRenderer Grip;
	ModelRenderer Coil;
	ModelRenderer FrontBase;
	ModelRenderer FrontTip;
	ModelRenderer DrumCenter;
	ModelRenderer DrumBack;
	ModelRenderer DrumBottom;
	ModelRenderer Shell1;
	ModelRenderer Shell2;
	ModelRenderer Shell3;
	ModelRenderer Shell4;
	ModelRenderer Shell5;
	ModelRenderer Shell6;
	ModelRenderer Clip1;
	ModelRenderer Clip2;
	ModelRenderer Clip3;
	ModelRenderer ChamberBack;
	ModelRenderer ChamberBackConnector;
	ModelRenderer ChamberTop;
	ModelRenderer Chamber;
	ModelRenderer Stock;
	ModelRenderer TriggerFrame;
	ModelRenderer Trigger;
	ModelRenderer Handle;
	ModelRenderer StockBottom;

	public ModelUboinik() {
		this.textureWidth = 64;
		this.textureHeight = 64;

		this.Barrel = new ModelRenderer(this, 0, 11);
		this.Barrel.addBox(0F, 0F, 0F, 24, 2, 2);
		this.Barrel.setRotationPoint(-24F, 0F, -1F);
		this.Barrel.setTextureSize(64, 64);
		this.Barrel.mirror = true;
		setRotation(this.Barrel, 0F, 0F, 0F);
		this.ConnectorFront = new ModelRenderer(this, 0, 53);
		this.ConnectorFront.addBox(0F, 0F, 0F, 1, 8, 3);
		this.ConnectorFront.setRotationPoint(-16F, -0.5F, -1.5F);
		this.ConnectorFront.setTextureSize(64, 64);
		this.ConnectorFront.mirror = true;
		setRotation(this.ConnectorFront, 0F, 0F, 0F);
		this.ConnectorBack = new ModelRenderer(this, 8, 53);
		this.ConnectorBack.addBox(0F, 0F, 0F, 1, 8, 3);
		this.ConnectorBack.setRotationPoint(0F, -0.5F, -1.5F);
		this.ConnectorBack.setTextureSize(64, 64);
		this.ConnectorBack.mirror = true;
		setRotation(this.ConnectorBack, 0F, 0F, 0F);
		this.Grip = new ModelRenderer(this, 16, 57);
		this.Grip.addBox(0F, 0F, 0F, 15, 4, 3);
		this.Grip.setRotationPoint(-15F, 3.5F, -1.5F);
		this.Grip.setTextureSize(64, 64);
		this.Grip.mirror = true;
		setRotation(this.Grip, 0F, 0F, 0F);
		this.Coil = new ModelRenderer(this, 16, 51);
		this.Coil.addBox(0F, 0F, 0F, 15, 3, 3);
		this.Coil.setRotationPoint(-15F, -0.5F, -1.5F);
		this.Coil.setTextureSize(64, 64);
		this.Coil.mirror = true;
		setRotation(this.Coil, 0F, 0F, 0F);
		this.FrontBase = new ModelRenderer(this, 0, 49);
		this.FrontBase.addBox(0F, 0F, 0F, 1, 2, 2);
		this.FrontBase.setRotationPoint(-17F, 4.5F, -1F);
		this.FrontBase.setTextureSize(64, 64);
		this.FrontBase.mirror = true;
		setRotation(this.FrontBase, 0F, 0F, 0F);
		this.FrontTip = new ModelRenderer(this, 6, 51);
		this.FrontTip.addBox(0F, 0F, 0F, 4, 1, 1);
		this.FrontTip.setRotationPoint(-21F, 5F, -0.5F);
		this.FrontTip.setTextureSize(64, 64);
		this.FrontTip.mirror = true;
		setRotation(this.FrontTip, 0F, 0F, 0F);
		this.DrumCenter = new ModelRenderer(this, 6, 49);
		this.DrumCenter.addBox(0F, 0F, 0F, 6, 1, 1);
		this.DrumCenter.setRotationPoint(1F, 3F, -0.5F);
		this.DrumCenter.setTextureSize(64, 64);
		this.DrumCenter.mirror = true;
		setRotation(this.DrumCenter, 0F, 0F, 0F);
		this.DrumBack = new ModelRenderer(this, 0, 40);
		this.DrumBack.addBox(0F, 0F, 0F, 1, 7, 2);
		this.DrumBack.setRotationPoint(7F, 1F, -1F);
		this.DrumBack.setTextureSize(64, 64);
		this.DrumBack.mirror = true;
		setRotation(this.DrumBack, 0F, 0F, 0F);
		this.DrumBottom = new ModelRenderer(this, 6, 46);
		this.DrumBottom.addBox(0F, 0F, 0F, 7, 1, 2);
		this.DrumBottom.setRotationPoint(0F, 7.5F, -1F);
		this.DrumBottom.setTextureSize(64, 64);
		this.DrumBottom.mirror = true;
		setRotation(this.DrumBottom, 0F, 0F, 0F);
		this.Shell1 = new ModelRenderer(this, 0, 34);
		this.Shell1.addBox(0F, -3.5F, -1F, 5, 2, 2);
		this.Shell1.setRotationPoint(1.5F, 3.5F, 0F);
		this.Shell1.setTextureSize(64, 64);
		this.Shell1.mirror = true;
		setRotation(this.Shell1, 1.047198F, 0F, 0F);
		this.Shell2 = new ModelRenderer(this, 0, 34);
		this.Shell2.addBox(0F, -3.5F, -1F, 5, 2, 2);
		this.Shell2.setRotationPoint(1.5F, 3.5F, 0F);
		this.Shell2.setTextureSize(64, 64);
		this.Shell2.mirror = true;
		setRotation(this.Shell2, 2.094395F, 0F, 0F);
		this.Shell3 = new ModelRenderer(this, 0, 34);
		this.Shell3.addBox(0F, -3.5F, -1F, 5, 2, 2);
		this.Shell3.setRotationPoint(1.5F, 3.5F, 0F);
		this.Shell3.setTextureSize(64, 64);
		this.Shell3.mirror = true;
		setRotation(this.Shell3, 3.141593F, 0F, 0F);
		this.Shell4 = new ModelRenderer(this, 0, 34);
		this.Shell4.addBox(0F, -3.5F, -1F, 5, 2, 2);
		this.Shell4.setRotationPoint(1.5F, 3.5F, 0F);
		this.Shell4.setTextureSize(64, 64);
		this.Shell4.mirror = true;
		setRotation(this.Shell4, -2.094395F, 0F, 0F);
		this.Shell5 = new ModelRenderer(this, 0, 34);
		this.Shell5.addBox(0F, -3.5F, -1F, 5, 2, 2);
		this.Shell5.setRotationPoint(1.5F, 3.5F, 0F);
		this.Shell5.setTextureSize(64, 64);
		this.Shell5.mirror = true;
		setRotation(this.Shell5, -1.047198F, 0F, 0F);
		this.Shell6 = new ModelRenderer(this, 0, 34);
		this.Shell6.addBox(0F, -3.5F, -1F, 5, 2, 2);
		this.Shell6.setRotationPoint(1.5F, 3.5F, 0F);
		this.Shell6.setTextureSize(64, 64);
		this.Shell6.mirror = true;
		setRotation(this.Shell6, 0F, 0F, 0F);
		this.Clip1 = new ModelRenderer(this, 6, 42);
		this.Clip1.addBox(0F, -1.5F, -0.5F, 2, 3, 1);
		this.Clip1.setRotationPoint(4F, 3.5F, 0F);
		this.Clip1.setTextureSize(64, 64);
		this.Clip1.mirror = true;
		setRotation(this.Clip1, 0F, 0F, 0F);
		this.Clip2 = new ModelRenderer(this, 6, 42);
		this.Clip2.addBox(0F, -1.5F, -0.5F, 2, 3, 1);
		this.Clip2.setRotationPoint(4F, 3.5F, 0F);
		this.Clip2.setTextureSize(64, 64);
		this.Clip2.mirror = true;
		setRotation(this.Clip2, 1.047198F, 0F, 0F);
		this.Clip3 = new ModelRenderer(this, 6, 42);
		this.Clip3.addBox(0F, -1.5F, -0.5F, 2, 3, 1);
		this.Clip3.setRotationPoint(4F, 3.5F, 0F);
		this.Clip3.setTextureSize(64, 64);
		this.Clip3.mirror = true;
		setRotation(this.Clip3, 2.094395F, 0F, 0F);
		this.ChamberBack = new ModelRenderer(this, 0, 28);
		this.ChamberBack.addBox(0F, 0F, 0F, 8, 2, 2);
		this.ChamberBack.setRotationPoint(8F, 1F, -1F);
		this.ChamberBack.setTextureSize(64, 64);
		this.ChamberBack.mirror = true;
		setRotation(this.ChamberBack, 0F, 0F, 0F);
		this.ChamberBackConnector = new ModelRenderer(this, 12, 43);
		this.ChamberBackConnector.addBox(0F, 0F, 0F, 4, 1, 2);
		this.ChamberBackConnector.setRotationPoint(12F, 0F, -1F);
		this.ChamberBackConnector.setTextureSize(64, 64);
		this.ChamberBackConnector.mirror = true;
		setRotation(this.ChamberBackConnector, 0F, 0F, 0F);
		this.ChamberTop = new ModelRenderer(this, 0, 25);
		this.ChamberTop.addBox(0F, 0F, 0F, 9, 1, 2);
		this.ChamberTop.setRotationPoint(7F, -1F, -1F);
		this.ChamberTop.setTextureSize(64, 64);
		this.ChamberTop.mirror = true;
		setRotation(this.ChamberTop, 0F, 0F, 0F);
		this.Chamber = new ModelRenderer(this, 0, 20);
		this.Chamber.addBox(0F, 0F, 0F, 6, 2, 3);
		this.Chamber.setRotationPoint(1F, -1F, -1.5F);
		this.Chamber.setTextureSize(64, 64);
		this.Chamber.mirror = true;
		setRotation(this.Chamber, 0F, 0F, 0F);
		this.Stock = new ModelRenderer(this, 0, 15);
		this.Stock.addBox(0F, 0F, 0F, 23, 3, 2);
		this.Stock.setRotationPoint(13F, 3F, -1F);
		this.Stock.setTextureSize(64, 64);
		this.Stock.mirror = true;
		setRotation(this.Stock, 0F, 0F, 0F);
		this.TriggerFrame = new ModelRenderer(this, 24, 45);
		this.TriggerFrame.addBox(0F, 0F, 0F, 5, 5, 1);
		this.TriggerFrame.setRotationPoint(8F, 3F, -0.5F);
		this.TriggerFrame.setTextureSize(64, 64);
		this.TriggerFrame.mirror = true;
		setRotation(this.TriggerFrame, 0F, 0F, 0F);
		this.Trigger = new ModelRenderer(this, 36, 46);
		this.Trigger.addBox(-1F, 0F, 0F, 1, 4, 1);
		this.Trigger.setRotationPoint(12.5F, 3F, -0.5F);
		this.Trigger.setTextureSize(64, 64);
		this.Trigger.mirror = true;
		setRotation(this.Trigger, 0F, 0F, 0.4363323F);
		this.Handle = new ModelRenderer(this, 40, 43);
		this.Handle.addBox(0F, 0F, 0F, 3, 6, 2);
		this.Handle.setRotationPoint(13F, 6F, -1F);
		this.Handle.setTextureSize(64, 64);
		this.Handle.mirror = true;
		setRotation(this.Handle, 0F, 0F, -0.1745329F);
		this.StockBottom = new ModelRenderer(this, 26, 36);
		this.StockBottom.addBox(0F, 0F, 0F, 10, 5, 2);
		this.StockBottom.setRotationPoint(26F, 6F, -1F);
		this.StockBottom.setTextureSize(64, 64);
		this.StockBottom.mirror = true;
		setRotation(this.StockBottom, 0F, 0F, 0F);
	}

	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5, ItemStack item) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		this.Barrel.render(f5);
		this.ConnectorFront.render(f5);
		this.ConnectorBack.render(f5);
		this.Grip.render(f5);
		GL11.glDisable(GL11.GL_CULL_FACE);
		this.Coil.render(f5);
		GL11.glEnable(GL11.GL_CULL_FACE);
		this.FrontBase.render(f5);
		this.FrontTip.render(f5);
		this.DrumCenter.render(f5);
		this.DrumBack.render(f5);
		this.DrumBottom.render(f5);
		
		int ammo = ItemGunBase.getMag(item);
		
		if(ammo > 5)
			this.Shell5.render(f5);
		if(ammo > 4)
			this.Shell4.render(f5);
		if(ammo > 3)
			this.Shell3.render(f5);
		if(ammo > 2)
			this.Shell2.render(f5);
		if(ammo > 1)
			this.Shell1.render(f5);
		if(ammo > 0)
			this.Shell6.render(f5);
		
		this.Clip1.render(f5);
		this.Clip2.render(f5);
		this.Clip3.render(f5);
		this.ChamberBack.render(f5);
		this.ChamberBackConnector.render(f5);
		this.ChamberTop.render(f5);
		GL11.glDisable(GL11.GL_CULL_FACE);
		this.Chamber.render(f5);
		GL11.glEnable(GL11.GL_CULL_FACE);
		this.Stock.render(f5);
		GL11.glDisable(GL11.GL_CULL_FACE);
		this.TriggerFrame.render(f5);
		GL11.glEnable(GL11.GL_CULL_FACE);
		this.Trigger.render(f5);
		this.Handle.render(f5);
		this.StockBottom.render(f5);
	}
	
	public void renderDud(float f5) {
		this.Barrel.render(f5);
		this.ConnectorFront.render(f5);
		this.ConnectorBack.render(f5);
		this.Grip.render(f5);
		GL11.glDisable(GL11.GL_CULL_FACE);
		this.Coil.render(f5);
		GL11.glEnable(GL11.GL_CULL_FACE);
		this.FrontBase.render(f5);
		this.FrontTip.render(f5);
		this.DrumCenter.render(f5);
		this.DrumBack.render(f5);
		this.DrumBottom.render(f5);
		this.Shell5.render(f5);
		this.Shell4.render(f5);
		this.Shell3.render(f5);
		this.Shell2.render(f5);
		this.Shell1.render(f5);
		this.Shell6.render(f5);
		this.Clip1.render(f5);
		this.Clip2.render(f5);
		this.Clip3.render(f5);
		this.ChamberBack.render(f5);
		this.ChamberBackConnector.render(f5);
		this.ChamberTop.render(f5);
		GL11.glDisable(GL11.GL_CULL_FACE);
		this.Chamber.render(f5);
		GL11.glEnable(GL11.GL_CULL_FACE);
		this.Stock.render(f5);
		GL11.glDisable(GL11.GL_CULL_FACE);
		this.TriggerFrame.render(f5);
		GL11.glEnable(GL11.GL_CULL_FACE);
		this.Trigger.render(f5);
		this.Handle.render(f5);
		this.StockBottom.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}

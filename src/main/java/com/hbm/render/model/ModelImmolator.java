// Date: 22.11.2016 22:40:09
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package com.hbm.render.model;

import net.minecraft.client.model.ModelBase;
import net.minecraft.client.model.ModelRenderer;
import net.minecraft.entity.Entity;

public class ModelImmolator extends ModelBase {
	// fields
	ModelRenderer CylinderBase;
	ModelRenderer CylinderFront;
	ModelRenderer PipeBBase;
	ModelRenderer PipeB;
	ModelRenderer TipBase;
	ModelRenderer PipeL;
	ModelRenderer PipeLFront;
	ModelRenderer TipFront;
	ModelRenderer ChamberH;
	ModelRenderer ChamberW;
	ModelRenderer PipeTBack;
	ModelRenderer PipeTBase;
	ModelRenderer PipeT;
	ModelRenderer PipeTFront;
	ModelRenderer Body;
	ModelRenderer Tank;
	ModelRenderer HandleBase;
	ModelRenderer HandleBar;
	ModelRenderer HandleGrip;
	ModelRenderer BodyPlate;
	ModelRenderer ValveFront;
	ModelRenderer ValveCenter;
	ModelRenderer Stock;
	ModelRenderer LatchBase;
	ModelRenderer LatchHandle;
	ModelRenderer ValveBack;

	public ModelImmolator() {
		this.textureWidth = 64;
		this.textureHeight = 32;

		this.CylinderBase = new ModelRenderer(this, 0, 0);
		this.CylinderBase.addBox(0F, 0F, 0F, 2, 4, 4);
		this.CylinderBase.setRotationPoint(0F, 0F, -2F);
		this.CylinderBase.setTextureSize(64, 32);
		this.CylinderBase.mirror = true;
		setRotation(this.CylinderBase, 0F, 0F, 0F);
		this.CylinderFront = new ModelRenderer(this, 0, 8);
		this.CylinderFront.addBox(0F, 0F, 0F, 1, 3, 3);
		this.CylinderFront.setRotationPoint(-1F, 0.5F, -1.5F);
		this.CylinderFront.setTextureSize(64, 32);
		this.CylinderFront.mirror = true;
		setRotation(this.CylinderFront, 0F, 0F, 0F);
		this.PipeBBase = new ModelRenderer(this, 0, 14);
		this.PipeBBase.addBox(0F, 0F, 0F, 2, 2, 2);
		this.PipeBBase.setRotationPoint(-2F, 2F, 0F);
		this.PipeBBase.setTextureSize(64, 32);
		this.PipeBBase.mirror = true;
		setRotation(this.PipeBBase, 0F, 0F, 0F);
		this.PipeB = new ModelRenderer(this, 0, 18);
		this.PipeB.addBox(0F, 0F, 0F, 8, 1, 1);
		this.PipeB.setRotationPoint(-10F, 2.5F, 0.5F);
		this.PipeB.setTextureSize(64, 32);
		this.PipeB.mirror = true;
		setRotation(this.PipeB, 0F, 0F, 0F);
		this.TipBase = new ModelRenderer(this, 8, 8);
		this.TipBase.addBox(0F, 0F, 0F, 2, 2, 2);
		this.TipBase.setRotationPoint(-12F, 1.5F, -0.5F);
		this.TipBase.setTextureSize(64, 32);
		this.TipBase.mirror = true;
		setRotation(this.TipBase, 0F, 0F, 0F);
		this.PipeL = new ModelRenderer(this, 0, 20);
		this.PipeL.addBox(0F, 0F, 0F, 7, 1, 1);
		this.PipeL.setRotationPoint(-7F, 2.5F, -1.5F);
		this.PipeL.setTextureSize(64, 32);
		this.PipeL.mirror = true;
		setRotation(this.PipeL, 0F, 0F, 0F);
		this.PipeLFront = new ModelRenderer(this, 0, 22);
		this.PipeLFront.addBox(-4F, 0F, 0F, 4, 1, 1);
		this.PipeLFront.setRotationPoint(-7F, 2.5F, -1.5F);
		this.PipeLFront.setTextureSize(64, 32);
		this.PipeLFront.mirror = true;
		setRotation(this.PipeLFront, 0F, 0.4363323F, 0F);
		this.TipFront = new ModelRenderer(this, 8, 12);
		this.TipFront.addBox(0F, 0F, 0F, 2, 1, 1);
		this.TipFront.setRotationPoint(-14F, 2F, 0F);
		this.TipFront.setTextureSize(64, 32);
		this.TipFront.mirror = true;
		setRotation(this.TipFront, 0F, 0F, 0F);
		this.ChamberH = new ModelRenderer(this, 24, 0);
		this.ChamberH.addBox(0F, 0F, 0F, 4, 5, 4);
		this.ChamberH.setRotationPoint(2F, -0.5F, -2F);
		this.ChamberH.setTextureSize(64, 32);
		this.ChamberH.mirror = true;
		setRotation(this.ChamberH, 0F, 0F, 0F);
		this.ChamberW = new ModelRenderer(this, 40, 0);
		this.ChamberW.addBox(0F, 0F, 0F, 4, 4, 5);
		this.ChamberW.setRotationPoint(2F, 0F, -2.5F);
		this.ChamberW.setTextureSize(64, 32);
		this.ChamberW.mirror = true;
		setRotation(this.ChamberW, 0F, 0F, 0F);
		this.PipeTBack = new ModelRenderer(this, 0, 24);
		this.PipeTBack.addBox(0F, 0F, 0F, 6, 1, 1);
		this.PipeTBack.setRotationPoint(0F, -2F, 2.5F);
		this.PipeTBack.setTextureSize(64, 32);
		this.PipeTBack.mirror = true;
		setRotation(this.PipeTBack, -0.4363323F, 0F, 0F);
		this.PipeTBase = new ModelRenderer(this, 8, 14);
		this.PipeTBase.addBox(0F, 1F, 0F, 1, 2, 1);
		this.PipeTBase.setRotationPoint(1F, -2F, 2.5F);
		this.PipeTBase.setTextureSize(64, 32);
		this.PipeTBase.mirror = true;
		setRotation(this.PipeTBase, -0.4363323F, 0F, 0F);
		this.PipeT = new ModelRenderer(this, 0, 26);
		this.PipeT.addBox(-9F, 0F, 0F, 9, 1, 1);
		this.PipeT.setRotationPoint(0F, -2F, 2.5F);
		this.PipeT.setTextureSize(64, 32);
		this.PipeT.mirror = true;
		setRotation(this.PipeT, -0.4363323F, -0.296706F, -0.4014257F);
		this.PipeTFront = new ModelRenderer(this, 0, 28);
		this.PipeTFront.addBox(0F, 0F, 0F, 3, 1, 1);
		this.PipeTFront.setRotationPoint(-10F, 1.5F, 0F);
		this.PipeTFront.setTextureSize(64, 32);
		this.PipeTFront.mirror = true;
		setRotation(this.PipeTFront, 0F, 0F, 0F);
		this.Body = new ModelRenderer(this, 24, 9);
		this.Body.addBox(0F, 0F, 0F, 10, 4, 4);
		this.Body.setRotationPoint(6F, 0.5F, -1.5F);
		this.Body.setTextureSize(64, 32);
		this.Body.mirror = true;
		setRotation(this.Body, 0F, 0F, 0F);
		this.Tank = new ModelRenderer(this, 12, 0);
		this.Tank.addBox(0F, 0F, 0F, 3, 3, 2);
		this.Tank.setRotationPoint(6F, 1F, -3F);
		this.Tank.setTextureSize(64, 32);
		this.Tank.mirror = true;
		setRotation(this.Tank, 0F, 0F, 0F);
		this.HandleBase = new ModelRenderer(this, 24, 17);
		this.HandleBase.addBox(0F, 0F, 0F, 2, 2, 1);
		this.HandleBase.setRotationPoint(4F, 1F, -3F);
		this.HandleBase.setTextureSize(64, 32);
		this.HandleBase.mirror = true;
		setRotation(this.HandleBase, 0F, 0F, 0F);
		this.HandleBar = new ModelRenderer(this, 30, 17);
		this.HandleBar.addBox(0F, 0F, 0F, 1, 1, 2);
		this.HandleBar.setRotationPoint(4.5F, 1.5F, -5F);
		this.HandleBar.setTextureSize(64, 32);
		this.HandleBar.mirror = true;
		setRotation(this.HandleBar, 0F, 0F, 0F);
		this.HandleGrip = new ModelRenderer(this, 36, 17);
		this.HandleGrip.addBox(0F, 0F, -2F, 1, 1, 2);
		this.HandleGrip.setRotationPoint(4.5F, 1.5F, -5F);
		this.HandleGrip.setTextureSize(64, 32);
		this.HandleGrip.mirror = true;
		setRotation(this.HandleGrip, 0F, -0.3490659F, 0F);
		this.BodyPlate = new ModelRenderer(this, 24, 20);
		this.BodyPlate.addBox(0F, 0F, 0F, 10, 1, 2);
		this.BodyPlate.setRotationPoint(6F, 0F, 0F);
		this.BodyPlate.setTextureSize(64, 32);
		this.BodyPlate.mirror = true;
		setRotation(this.BodyPlate, 0F, 0F, 0F);
		this.ValveFront = new ModelRenderer(this, 0, 30);
		this.ValveFront.addBox(0F, 0F, 0F, 1, 1, 1);
		this.ValveFront.setRotationPoint(8F, -0.5F, 0.5F);
		this.ValveFront.setTextureSize(64, 32);
		this.ValveFront.mirror = true;
		setRotation(this.ValveFront, 0F, 0F, 0F);
		this.ValveCenter = new ModelRenderer(this, 4, 30);
		this.ValveCenter.addBox(0F, 0F, 0F, 1, 1, 1);
		this.ValveCenter.setRotationPoint(11F, -0.5F, 0.5F);
		this.ValveCenter.setTextureSize(64, 32);
		this.ValveCenter.mirror = true;
		setRotation(this.ValveCenter, 0F, 0F, 0F);
		this.Stock = new ModelRenderer(this, 24, 23);
		this.Stock.addBox(0F, 0F, 0F, 2, 4, 2);
		this.Stock.setRotationPoint(16F, 0.5F, 0F);
		this.Stock.setTextureSize(64, 32);
		this.Stock.mirror = true;
		setRotation(this.Stock, 0F, 0F, 0F);
		this.LatchBase = new ModelRenderer(this, 8, 28);
		this.LatchBase.addBox(0F, 0F, 0F, 2, 1, 1);
		this.LatchBase.setRotationPoint(16F, 0.5F, 2F);
		this.LatchBase.setTextureSize(64, 32);
		this.LatchBase.mirror = true;
		setRotation(this.LatchBase, 0F, 0F, 0F);
		this.LatchHandle = new ModelRenderer(this, 32, 23);
		this.LatchHandle.addBox(0F, 0F, 0F, 2, 3, 1);
		this.LatchHandle.setRotationPoint(16F, 0.5F, 3F);
		this.LatchHandle.setTextureSize(64, 32);
		this.LatchHandle.mirror = true;
		setRotation(this.LatchHandle, 0F, 0F, 0F);
		this.ValveBack = new ModelRenderer(this, 8, 30);
		this.ValveBack.addBox(0F, 0F, 0F, 1, 1, 1);
		this.ValveBack.setRotationPoint(17.5F, 1F, 0.5F);
		this.ValveBack.setTextureSize(64, 32);
		this.ValveBack.mirror = true;
		setRotation(this.ValveBack, 0F, 0F, 0F);
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5) {
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5, entity);
		this.CylinderBase.render(f5);
		this.CylinderFront.render(f5);
		this.PipeBBase.render(f5);
		this.PipeB.render(f5);
		this.TipBase.render(f5);
		this.PipeL.render(f5);
		this.PipeLFront.render(f5);
		this.TipFront.render(f5);
		this.ChamberH.render(f5);
		this.ChamberW.render(f5);
		this.PipeTBack.render(f5);
		this.PipeTBase.render(f5);
		this.PipeT.render(f5);
		this.PipeTFront.render(f5);
		this.Body.render(f5);
		this.Tank.render(f5);
		this.HandleBase.render(f5);
		this.HandleBar.render(f5);
		this.HandleGrip.render(f5);
		this.BodyPlate.render(f5);
		this.ValveFront.render(f5);
		this.ValveCenter.render(f5);
		this.Stock.render(f5);
		this.LatchBase.render(f5);
		this.LatchHandle.render(f5);
		this.ValveBack.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z) {
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float f, float f1, float f2, float f3, float f4, float f5, Entity entity) {
		super.setRotationAngles(f, f1, f2, f3, f4, f5, entity);
	}

}
